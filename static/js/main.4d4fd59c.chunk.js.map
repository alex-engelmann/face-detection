{"version":3,"sources":["components/Navigation/Navigation.js","components/ImageLinkForm/ImageLinkForm.js","components/FaceDetection/FaceDetection.js","components/Rank/Rank.js","components/SignIn/SignIn.js","components/Register/Register.js","App.js","serviceWorker.js","index.js"],"names":["Navigation","onRouteChange","isSignedIn","style","display","justifyContent","onClick","className","ImageLinkForm","onInputChange","onPictureSubmit","oneFace","manyFaces","isUrlBlank","type","id","onChange","disabled","FaceDetection","imageUrl","box","alt","src","faces","map","ele","index","key","left","leftCol","top","topRow","right","rightCol","bottom","bottomRow","length","Rank","name","entries","SignIn","props","onEmailChange","event","setState","signInEmail","target","value","onPasswordChange","signInPassword","onSubmitSignIn","fetch","method","headers","body","JSON","stringify","email","state","password","then","response","json","user","loadUser","guestSignIn","this","htmlFor","React","Component","Register","onNameChange","require","config","initialState","input","route","showImage","joined","App","data","calculateFaceLocation","image","document","getElementById","width","Number","height","i","outputs","regions","currentFace","region_info","bounding_box","left_col","top_row","right_col","bottom_row","push","displayFaceBox","clearURL","console","log","count","Object","assign","catch","alert","err","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"qSAmBeA,EAjBI,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,cAClB,OADkD,EAAjBC,WAGzB,yBAAKC,MAAO,CAAEC,QAAS,OAAQC,eAAgB,aAC3C,uBAAGC,QAAS,kBAAML,EAAc,YAAYM,UAAU,2CAAtD,aAIJ,yBAAKJ,MAAO,CAAEC,QAAS,OAAQC,eAAgB,aAC3C,uBAAGC,QAAS,kBAAML,EAAc,WAAWM,UAAU,2CAArD,WACA,uBAAGD,QAAS,kBAAML,EAAc,aAAaM,UAAU,2CAAvD,cCuBDC,G,MAhCO,SAAC,GAAwE,IAAtEC,EAAqE,EAArEA,cAAeC,EAAsD,EAAtDA,gBAAiBC,EAAqC,EAArCA,QAASC,EAA4B,EAA5BA,UAAWC,EAAiB,EAAjBA,WACzE,OACI,6BACI,uBAAGN,UAAU,MACR,0IAEL,2BACI,4BAAQA,UAAU,sDACjBO,KAAK,SAASR,QAASK,GADxB,YAEA,4BAAQJ,UAAU,sDACjBO,KAAK,SAASR,QAASM,GADxB,eAIJ,yBAAKL,UAAU,UACX,yBAAKA,UAAU,gCAEX,2BAAOQ,GAAG,WAAWR,UAAU,qBAAqBO,KAAK,OAAOE,SAAUP,IAC1E,4BACIQ,SAAYJ,IACZC,KAAK,SACLP,UAAU,2CACVD,QAASI,GAJb,eCYLQ,G,MA7BO,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,SAAUC,EAAU,EAAVA,IAC/B,OACI,yBAAKb,UAAU,aACX,yBAAKA,UAAU,gBACX,yBAAKQ,GAAG,aAAaM,IAAI,kBAAkBC,IAAKH,IAI/CC,EAAIG,MAAMC,KAAI,SAACC,EAAKC,GAAN,OAEX,yBAAKC,IAAKD,EAAOnB,UAAU,eACvBJ,MAAO,CACHyB,KAAMH,EAAII,QACVC,IAAKL,EAAIM,OACTC,MAAOP,EAAIQ,SACXC,OAAQT,EAAIU,gBAMxB,2BAAIf,EAAIG,MAAMa,OAAd,yBCVDC,EAXF,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QAClB,OACI,uCACQD,EADR,oCAEI,yBAAK/B,UAAU,aACVgC,KC2GFC,E,YAhHX,WAAYC,GAAQ,IAAD,8BACf,4CAAMA,KAMVC,cAAgB,SAACC,GACb,EAAKC,SAAS,CAAEC,YAAaF,EAAMG,OAAOC,SAR3B,EAWnBC,iBAAmB,SAACL,GAChB,EAAKC,SAAS,CAAEK,eAAgBN,EAAMG,OAAOC,SAZ9B,EAenBG,eAAiB,WACbC,MAAM,0DAA2D,CAC7DC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CACjBC,MAAO,EAAKC,MAAMb,YAClBc,SAAU,EAAKD,MAAMT,mBAGxBW,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACEA,EAAKhD,KACL,EAAK0B,MAAMuB,SAASD,GACpB,EAAKtB,MAAMxC,cAAc,aA5BtB,EAiCnBgE,YAAc,WACVd,MAAM,0DAA2D,CAC7DC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CACjBC,MAAO,kBACPE,SAAU,UAGjBC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACEA,EAAKhD,KACL,EAAK0B,MAAMuB,SAASD,GACpB,EAAKtB,MAAMxC,cAAc,aA5CjC,EAAKyD,MAAQ,CACTb,YAAa,GACbI,eAAgB,IAJL,E,sEAmDT,IACEhD,EAAkBiE,KAAKzB,MAAvBxC,cACR,OACI,6BAASM,UAAU,2FACf,0BAAMA,UAAU,gBACZ,yBAAKA,UAAU,WACX,8BAAUQ,GAAG,UAAUR,UAAU,6BAC7B,4BAAQA,UAAU,kBAAlB,WACA,yBAAKA,UAAU,OACX,2BAAOA,UAAU,oBAAoB4D,QAAQ,iBAA7C,SACA,2BACI5D,UAAU,qEACVO,KAAK,QACLwB,KAAK,gBACLvB,GAAG,gBACHC,SAAUkD,KAAKxB,iBAGvB,yBAAKnC,UAAU,OACX,2BAAOA,UAAU,oBAAoB4D,QAAQ,YAA7C,YACA,2BAAO5D,UAAU,uEACbO,KAAK,WACLwB,KAAK,WACLvB,GAAG,WACHC,SAAUkD,KAAKlB,qBAK3B,6BACI,2BACI1C,QAAS4D,KAAKhB,eACd3C,UAAU,kEACVO,KAAK,SACLiC,MAAM,aAGd,6BACA,6BACI,2BACIzC,QAAS4D,KAAKD,YACd1D,UAAU,kEACVO,KAAK,SACLiC,MAAM,sBAId,yBAAKxC,UAAU,eACX,uBAAGD,QAAS,kBAAML,EAAc,aAC5BM,UAAU,gCADd,oB,GApGP6D,IAAMC,WC8FZC,E,YA7FX,WAAY7B,GAAO,IAAD,8BACd,4CAAMA,KAOV8B,aAAe,SAAC5B,GACZ,EAAKC,SAAS,CAACN,KAAMK,EAAMG,OAAOC,SATpB,EAYlBL,cAAgB,SAACC,GACb,EAAKC,SAAS,CAACa,MAAOd,EAAMG,OAAOC,SAbrB,EAgBlBC,iBAAmB,SAACL,GAChB,EAAKC,SAAS,CAACe,SAAUhB,EAAMG,OAAOC,SAjBxB,EAoBlBG,eAAiB,WACbC,MAAM,4DAA6D,CAC/DC,OAAQ,OACRC,QAAS,CAAC,eAAgB,oBAC1BC,KAAMC,KAAKC,UAAU,CACjBC,MAAO,EAAKC,MAAMD,MAClBE,SAAU,EAAKD,MAAMC,SACrBrB,KAAM,EAAKoB,MAAMpB,SAGxBsB,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACEA,EAAKhD,KACL,EAAK0B,MAAMuB,SAASD,GACpB,EAAKtB,MAAMxC,cAAc,aAhCjC,EAAKyD,MAAQ,CACTD,MAAO,GACPE,SAAU,GACVrB,KAAM,IALI,E,sEAyCd,OACI,6BAAS/B,UAAU,2FACf,0BAAMA,UAAU,gBACZ,yBAAKA,UAAU,WACX,8BAAUQ,GAAG,UAAUR,UAAU,6BAC7B,4BAAQA,UAAU,kBAAlB,YACA,yBAAKA,UAAU,OACX,2BAAOA,UAAU,oBAAoB4D,QAAQ,QAA7C,QACA,2BAAO5D,UAAU,qEACjBO,KAAK,OACLwB,KAAK,OACLvB,GAAG,OACHC,SAAUkD,KAAKK,gBAGnB,yBAAKhE,UAAU,OACX,2BAAOA,UAAU,oBAAoB4D,QAAQ,iBAA7C,SACA,2BAAO5D,UAAU,qEACjBO,KAAK,QACLwB,KAAK,gBACLvB,GAAG,gBACHC,SAAUkD,KAAKxB,iBAGnB,yBAAKnC,UAAU,OACX,2BAAOA,UAAU,oBAAoB4D,QAAQ,YAA7C,YACA,2BAAO5D,UAAU,uEACjBO,KAAK,WACLwB,KAAK,WACLvB,GAAG,WACHC,SAAUkD,KAAKlB,qBAMvB,yBAAKzC,UAAU,IACX,2BACID,QAAS4D,KAAKhB,eACd3C,UAAU,kEACVO,KAAK,SACLiC,MAAM,qB,GAnFfqB,IAAMC,W,MCO7BG,EAAQ,IAAUC,SAElB,IAAMC,EAAe,CACnBC,MAAO,GACPxD,SAAU,GACVC,IAAK,CAAEG,MAAO,CAAC,CAAEM,QAAS,EAAGE,OAAQ,EAAGE,SAAU,EAAGE,UAAW,KAChEyC,MAAO,SACP1E,YAAY,EACZ2E,WAAW,EACXd,KAAM,CACJhD,GAAI,GACJuB,KAAM,GACNmB,MAAO,GACPlB,QAAS,EACTuC,OAAQ,KAkKGC,E,YA9Jb,aAAe,IAAD,8BACZ,+CAIFf,SAAW,SAACgB,GACV,EAAKpC,SAAS,CACZmB,KAAM,CACJhD,GAAIiE,EAAKjE,GACTuB,KAAM0C,EAAK1C,KACXmB,MAAOuB,EAAKvB,MACZlB,QAASyC,EAAKzC,QACduC,OAAQE,EAAKF,WAZL,EAiBdG,sBAAwB,SAACD,GAQvB,IANA,IAAME,EAAQC,SAASC,eAAe,cAChCC,EAAQC,OAAOJ,EAAMG,OACrBE,EAASD,OAAOJ,EAAMK,QAExBhE,EAAQ,GAEHiE,EAAI,EAAGA,EAAIR,EAAKS,QAAQ,GAAGT,KAAKU,QAAQtD,OAAQoD,IAAK,CAC5D,IAAIG,EAAcX,EAAKS,QAAQ,GAAGT,KAAKU,QAAQF,GAAGI,YAAYC,aAC1DhE,EAAU8D,EAAYG,SAAWT,EACjCtD,EAAS4D,EAAYI,QAAUR,EAC/BtD,EAAYoD,EAASM,EAAYK,UAAYX,EAE7ClD,EAAaoD,EAAUI,EAAYM,WAAaV,EAAW,GAC/DhE,EAAM2E,KAAK,CAAErE,UAASE,SAAQE,WAAUE,cAE1C,MAAO,CACLZ,UAnCU,EAuCd4E,eAAiB,SAAC/E,GAEhB,EAAKwB,SAAS,CAAExB,IAAKA,KAzCT,EA4CdgF,SAAW,WAET,EAAKxD,SAAS,CAAE+B,MAAO,KACvBQ,SAASC,eAAe,YAAYrC,MAAQ,IA/ChC,EAkDdtC,cAAgB,SAACkC,GACf,EAAKC,SAAS,CAAE+B,MAAOhC,EAAMG,OAAOC,SAnDxB,EAuDdlC,WAAa,WACX,MAAyB,KAArB,EAAK6C,MAAMiB,OAxDH,EA2DdhE,QAAU,WACR,EAAKiC,SAAS,CAAE+B,MAAO,iEACvBQ,SAASC,eAAe,YAAYrC,MAAQ,gEA7DhC,EAgEdnC,UAAY,WACV,EAAKgC,SAAS,CAAE+B,MAAO,8DACvBQ,SAASC,eAAe,YAAYrC,MAAQ,6DAlEhC,EAqEdrC,gBAAkB,WAChB,EAAKkC,SAAS,CAAEzB,SAAU,EAAKuC,MAAMiB,QACrC,EAAKyB,WAELjD,MAAM,4DAA6D,CACjEC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CACnBmB,MAAO,EAAKjB,MAAMiB,UAGnBf,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAC,GACJ,GAAiB,4BAAbA,EAGF,OAFA,EAAKjB,SAAS,CAAEiC,WAAW,IAC3BwB,QAAQC,IAAI,yBACL,EAELzC,EACFV,MAAM,yDAA0D,CAC9DC,OAAQ,MACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CACnBzC,GAAI,EAAK2C,MAAMK,KAAKhD,OAGrB6C,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAA2C,GACJ,EAAK3D,SAAS4D,OAAOC,OAAO,EAAK/C,MAAMK,KAAM,CAAExB,QAASgE,QAEzDG,MAAML,QAAQC,KAGZK,MAAM,sBAIb,EAAKR,eAAe,EAAKlB,sBAAsBpB,OAEhD6C,OAAM,SAAAE,GAAG,OAAIP,QAAQC,IAAIM,MAC5B,EAAKhE,SAAS,CAAEiC,WAAW,KA7Gf,EAgHd5E,cAAgB,SAAC2E,GACD,YAAVA,EACF,EAAKhC,SAAS8B,GACK,SAAVE,GACT,EAAKhC,SAAS,CAAE1C,YAAY,IAE9B,EAAK0C,SAAS,CAAEgC,MAAOA,KApHvB,EAAKlB,MAAQgB,EAFD,E,sEAyHJ,IAAD,EACsCR,KAAKR,MAA1CxD,EADD,EACCA,WAAYiB,EADb,EACaA,SAAUyD,EADvB,EACuBA,MAAOxD,EAD9B,EAC8BA,IACrC,OACE,yBAAKb,UAAU,OAGb,kBAAC,EAAD,CAAYL,WAAYA,EAAYD,cAAeiE,KAAKjE,gBAC7C,SAAV2E,EACG,6BAG2B,oBAA1BV,KAAKR,MAAMK,KAAKN,MAA8B,kBAAC,EAAD,CAC7CnB,KAAM4B,KAAKR,MAAMK,KAAKzB,KACtBC,QAAS2B,KAAKR,MAAMK,KAAKxB,UACtB,GACL,kBAAC,EAAD,CACE9B,cAAeyD,KAAKzD,cACpBC,gBAAiBwD,KAAKxD,gBACtBC,QAASuD,KAAKvD,QACdC,UAAWsD,KAAKtD,UAChBC,WAAYqD,KAAKrD,cAEO,IAAzBqD,KAAKR,MAAMmB,UACV,kBAAC,EAAD,CAAezD,IAAKA,EAAKD,SAAUA,IAAe,IAI1C,WAAVyD,EACI,kBAAC,EAAD,CAAQZ,SAAUE,KAAKF,SAAU/D,cAAeiE,KAAKjE,gBACrD,kBAAC,EAAD,CAAU+D,SAAUE,KAAKF,SAAU/D,cAAeiE,KAAKjE,qB,GAvJrDoE,aCdEwC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,MCXNC,IAASC,OAAO,kBAAC,EAAD,MAAShC,SAASC,eAAe,SD0H3C,kBAAmBgC,WACrBA,UAAUC,cAAcC,MAAM1D,MAAK,SAAA2D,GACjCA,EAAaC,iB","file":"static/js/main.4d4fd59c.chunk.js","sourcesContent":["import React from 'react';\n\nconst Navigation = ({ onRouteChange, isSignedIn }) => {\n    if (isSignedIn) {\n        return (\n            <nav style={{ display: 'flex', justifyContent: 'flex-end' }}>\n                <p onClick={() => onRouteChange('signout')} className='f3 link dim black underline pa3 pointer'>Sign Out</p>\n            </nav>);\n    } else {\n        return (\n            <nav style={{ display: 'flex', justifyContent: 'flex-end' }}>\n                <p onClick={() => onRouteChange('signin')} className='f3 link dim black underline pa3 pointer'>Sign In</p>\n                <p onClick={() => onRouteChange('register')} className='f3 link dim black underline pa3 pointer'>Register</p>\n            </nav>\n\n        )\n    }\n}\n\nexport default Navigation;","import React from 'react';\nimport './ImageLinkForm.css';\n\nconst ImageLinkForm = ({ onInputChange, onPictureSubmit, oneFace, manyFaces, isUrlBlank }) => {\n    return (\n        <div>\n            <p className='f3'>\n                {'This site will find the faces in your pictures.  Enter the URL of an image or try these examples and click detect to see it in action!'}\n            </p>\n            <p>\n                <button className='f5 link dim br3 ph3 pv2 mb2 dib white bg-dark-green'\n                 type=\"submit\" onClick={oneFace}>One Face</button>\n                <button className='f5 link dim br3 ph3 pv2 mb2 dib white bg-dark-green'\n                 type=\"submit\" onClick={manyFaces}>Many Faces</button>\n            </p>\n\n            <div className='center'>\n                <div className='form center pa4 br3 shadow-5'>\n\n                    <input id='urlfield' className='f3 pa2 w-70 center' type='text' onChange={onInputChange} />\n                    <button\n                        disabled = {isUrlBlank()}\n                        type=\"submit\"\n                        className='w-30 f4 link ph1 pv2 dib white bg-orange'\n                        onClick={onPictureSubmit}\n\n                    >Detect</button>\n\n\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default ImageLinkForm;","import React from 'react';\nimport './FaceDetection.css';\n\nconst FaceDetection = ({ imageUrl, box }) => {\n    return (\n        <div className='center ma' >\n            <div className='absolute mt2'>\n                <img id='inputImage' alt='user submission' src={imageUrl} />\n                \n                {/*This goes through all the array elements and creates boxes */}\n\n                {box.faces.map((ele, index) => (\n\n                    <div key={index} className='bounding-box'\n                        style={{\n                            left: ele.leftCol,\n                            top: ele.topRow,\n                            right: ele.rightCol,\n                            bottom: ele.bottomRow\n                            \n                        }}\n                    ></div>\n                ))}\n                {/* This p element is exactly 50px tall */}\n                <p>{box.faces.length} face(s) detected</p>\n\n            </div>\n            \n        </div>\n    );\n}\n\nexport default FaceDetection;","import React from 'react';\n\n\nconst Rank = ({ name, entries }) => {\n    return (\n        <div>\n            {`${name}, your current entry count is...`}\n            <div className='white f1 '>\n                {entries}\n            </div>\n        </div>\n    );\n}\n\nexport default Rank;","import React from 'react'\n\nclass SignIn extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            signInEmail: '',\n            signInPassword: ''\n        }\n    }\n    onEmailChange = (event) => {\n        this.setState({ signInEmail: event.target.value })\n    }\n\n    onPasswordChange = (event) => {\n        this.setState({ signInPassword: event.target.value })\n    }\n\n    onSubmitSignIn = () => {\n        fetch('https://face-detection-backend-aje.herokuapp.com/signin', {\n            method: 'post',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                email: this.state.signInEmail,\n                password: this.state.signInPassword\n            })\n        })\n            .then(response => response.json())\n            .then(user => {\n                if (user.id) {\n                    this.props.loadUser(user);\n                    this.props.onRouteChange('home');\n                }\n            })\n    }\n\n    guestSignIn = () => {\n        fetch('https://face-detection-backend-aje.herokuapp.com/signin', {\n            method: 'post',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                email: \"guest@gmail.com\",\n                password: \"123\"\n            })\n        })\n        .then(response => response.json())\n        .then(user => {\n            if (user.id) {\n                this.props.loadUser(user);\n                this.props.onRouteChange('home');\n            }\n        })\n    }\n\n    render() {\n        const { onRouteChange } = this.props\n        return (\n            <article className=\"bg-washed-blue br3 ba dark-gray b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\n                <main className=\"pa4 black-80\">\n                    <div className=\"measure\">\n                        <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n                            <legend className=\"f2 fw6 ph0 mh0\">Sign In</legend>\n                            <div className=\"mt3\">\n                                <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\n                                <input\n                                    className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                                    type=\"email\"\n                                    name=\"email-address\"\n                                    id=\"email-address\"\n                                    onChange={this.onEmailChange}\n                                />\n                            </div>\n                            <div className=\"mv3\">\n                                <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\n                                <input className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                                    type=\"password\"\n                                    name=\"password\"\n                                    id=\"password\"\n                                    onChange={this.onPasswordChange}\n                                />\n                            </div>\n                        </fieldset>\n\n                        <div>\n                            <input\n                                onClick={this.onSubmitSignIn}\n                                className=\"b ph3 pv2 input-reset ba b--black bg-transparent pointer f6 dib\"\n                                type=\"submit\"\n                                value=\"Sign in\"\n                            />\n                        </div>\n                        <br></br>\n                        <div>\n                            <input\n                                onClick={this.guestSignIn}\n                                className=\"b ph3 pv2 input-reset ba b--black bg-transparent pointer f6 dib\"\n                                type=\"submit\"\n                                value=\"Sign in as Guest\"\n                            />\n                        </div>\n\n                        <div className=\"lh-copy mt3\">\n                            <p onClick={() => onRouteChange('register')}\n                                className=\"f6 link dim black db pointer\">Register\n                        </p>\n\n                        </div>\n                    </div>\n                </main>\n            </article>\n        );\n    }\n}\n\n\nexport default SignIn\n","import React from 'react'\n\nclass Register extends React.Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            email: '',\n            password: '',\n            name: ''\n        }\n    }\n    onNameChange = (event) => {\n        this.setState({name: event.target.value})\n    }\n\n    onEmailChange = (event) => {\n        this.setState({email: event.target.value})\n    }\n\n    onPasswordChange = (event) => {\n        this.setState({password: event.target.value})\n    }\n\n    onSubmitSignIn = () => {\n        fetch('https://face-detection-backend-aje.herokuapp.com/register', {\n            method: 'post',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({\n                email: this.state.email,\n                password: this.state.password,\n                name: this.state.name\n            })\n        })\n        .then(response => response.json())\n        .then(user => {\n            if (user.id){\n                this.props.loadUser(user)\n                this.props.onRouteChange('home')\n            }\n        })\n        \n    }\n\n    render() {\n        return (\n            <article className=\"bg-washed-blue br3 ba dark-gray b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\n                <main className=\"pa4 black-80\">\n                    <div className=\"measure\">\n                        <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n                            <legend className=\"f2 fw6 ph0 mh0\">Register</legend>\n                            <div className=\"mt3\">\n                                <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">Name</label>\n                                <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \n                                type=\"text\" \n                                name=\"name\" \n                                id=\"name\" \n                                onChange={this.onNameChange}\n                                />\n                            </div>\n                            <div className=\"mt3\">\n                                <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\n                                <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \n                                type=\"email\" \n                                name=\"email-address\" \n                                id=\"email-address\"\n                                onChange={this.onEmailChange}\n                                 />\n                            </div>\n                            <div className=\"mv3\">\n                                <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\n                                <input className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \n                                type=\"password\" \n                                name=\"password\" \n                                id=\"password\"\n                                onChange={this.onPasswordChange}\n                                />\n                            </div>\n\n                        </fieldset>\n                        { /* This blank className is needed to prevent a graphical glitch */ }\n                        <div className=\"\">\n                            <input\n                                onClick={this.onSubmitSignIn}\n                                className=\"b ph3 pv2 input-reset ba b--black bg-transparent pointer f6 dib\"\n                                type=\"submit\"\n                                value=\"Register\"\n                            />\n                        </div>\n\n                    </div>\n                </main>\n            </article>\n        );\n    }\n}\n\nexport default Register\n","import React, { Component } from 'react';\nimport Navigation from './components/Navigation/Navigation';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport FaceDetection from './components/FaceDetection/FaceDetection';\nimport Rank from './components/Rank/Rank';\nimport SignIn from './components/SignIn/SignIn';\nimport Register from './components/Register/Register';\nimport './App.css';\n\nrequire('dotenv').config()\n\nconst initialState = {\n  input: '',\n  imageUrl: '',\n  box: { faces: [{ leftCol: 0, topRow: 0, rightCol: 0, bottomRow: 0 }] },\n  route: 'signin',\n  isSignedIn: false,\n  showImage: false,\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    entries: 0,\n    joined: ''\n  }\n}\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = initialState;\n  }\n\n  loadUser = (data) => {\n    this.setState({\n      user: {\n        id: data.id,\n        name: data.name,\n        email: data.email,\n        entries: data.entries,\n        joined: data.joined\n      }\n    })\n  }\n\n  calculateFaceLocation = (data) => {\n    //getting dimensions of full image\n    const image = document.getElementById('inputImage');\n    const width = Number(image.width); //this is set as 500px elsewhere\n    const height = Number(image.height);\n\n    let faces = []\n    // //each data.regions is an individual face\n    for (let i = 0; i < data.outputs[0].data.regions.length; i++) {\n      let currentFace = data.outputs[0].data.regions[i].region_info.bounding_box\n      let leftCol = currentFace.left_col * width\n      let topRow = currentFace.top_row * height\n      let rightCol = (width - (currentFace.right_col * width))\n      //The 50px in the following line is because of the <p> element below the image box\n      let bottomRow = (height - (currentFace.bottom_row * height)) + 50\n      faces.push({ leftCol, topRow, rightCol, bottomRow })\n    }\n    return {\n      faces\n    }\n  }\n\n  displayFaceBox = (box) => {\n    // console.log(box)\n    this.setState({ box: box })\n  }\n\n  clearURL = () => {\n    // console.log(event);\n    this.setState({ input: \"\" });\n    document.getElementById('urlfield').value = \"\";\n  }\n\n  onInputChange = (event) => {\n    this.setState({ input: event.target.value });\n    // console.log(event);\n  }\n\n  isUrlBlank = () => {\n    if (this.state.input === \"\") { return true }\n    return false;\n  }\n  oneFace = () => {\n    this.setState({ input: 'https://images.unsplash.com/photo-1569001821155-104016a820c7' });\n    document.getElementById('urlfield').value = 'https://images.unsplash.com/photo-1569001821155-104016a820c7'\n  }\n\n  manyFaces = () => {\n    this.setState({ input: 'https://images.unsplash.com/photo-1544097797-bf8fc095364c' });\n    document.getElementById('urlfield').value = 'https://images.unsplash.com/photo-1544097797-bf8fc095364c'\n  }\n\n  onPictureSubmit = () => {\n    this.setState({ imageUrl: this.state.input });\n    this.clearURL();\n\n    fetch('https://face-detection-backend-aje.herokuapp.com/imageurl', {\n      method: 'post',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        input: this.state.input\n      })\n    })\n      .then(response => response.json())\n      .then(response => {\n        if (response === 'unable to work with API') {\n          this.setState({ showImage: false });\n          console.log(\"not a valid image url\");\n          return 0;\n        }\n        if (response) {\n          fetch('https://face-detection-backend-aje.herokuapp.com/image', {\n            method: 'put',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          })\n            .then(response => response.json())\n            .then(count => {\n              this.setState(Object.assign(this.state.user, { entries: count }))\n            })\n            .catch(console.log)\n\n        }\n        else { alert(\"No server response\") }\n\n        // console.log(response);\n        //the calculated face information is then set into box state\n        this.displayFaceBox(this.calculateFaceLocation(response));\n      })\n      .catch(err => console.log(err))\n    this.setState({ showImage: true })\n  }\n\n  onRouteChange = (route) => {\n    if (route === 'signout') {\n      this.setState(initialState)\n    } else if (route === 'home') {\n      this.setState({ isSignedIn: true })\n    }\n    this.setState({ route: route });\n  }\n\n  render() {\n    const { isSignedIn, imageUrl, route, box } = this.state;\n    return (\n      <div className=\"App\">\n        {/*<Particles className='particles'\n          params={particlesOptions}/>*/}\n        <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange} />\n        {route === 'home'\n          ? <div>\n\n            {/* {If user is guest, they won't see their entry count} */}\n            {this.state.user.email !== \"guest@gmail.com\" ? <Rank\n              name={this.state.user.name}\n              entries={this.state.user.entries}\n            /> : \"\"}\n            <ImageLinkForm\n              onInputChange={this.onInputChange}\n              onPictureSubmit={this.onPictureSubmit}\n              oneFace={this.oneFace}\n              manyFaces={this.manyFaces}\n              isUrlBlank={this.isUrlBlank}\n            />\n            {this.state.showImage === true ?\n              <FaceDetection box={box} imageUrl={imageUrl} /> : \"\"}\n\n          </div>\n          : (\n            route === 'signin'\n              ? <SignIn loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\n              : <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\n          )\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}